@import 'utils';
@import 'core';
@import 'scrollbar';
@import 'table';
@import 'scales/icon-size';
@import "scales/img-size";
@include pri-sm-logo;

header,
sidebar {

    &:has(nav) {
        z-index: 10;
    }

    .site-name {
        gap: 0 1rem;

        :has(>*>[class$="logo"]) {
            :has(>[class$="logo"]) {
                padding: clamp(.25rem, .1rem + .2vw + .3vh, 2rem) clamp(.25rem, .1rem + .15vw + .2vh, 2rem);
                transform: translateY(-5%);
                background-color: var(--main-white);
                border-radius: min(0.5cqh, 0.75rem);
            }
        }
    }

    &.bg-primary {
        *:not(.bg-white) {
            &.text-primary {
                color: var(--main-white) !important;
            }
        }
    }


}

header {
    --v-offset: clamp(1rem, 0.5rem + 0.5vw + 0.75vh, 5rem);

    nav {
        padding: var(--v-offset) clamp(2rem, 1rem + 6vw, 10rem);
        color: var(--main-white);
    }
}

html {
    left: 0;


    main.main {
        padding-left: var(--main-container-px) !important;
        padding-right: var(--main-container-px);
    }
}

// body.employee-main {
//     main.main {
//         padding-left: 3.5rem;
//         padding-right: 1rem;
//     }
// }

input.rm-bg-icon {
    &.form-control {

        &.is-invalid,
        &.was-validated,
        &:invalid {
            background-image: none;
        }
    }
}

body {

    .invalid-feedback,
    .invalid-feedback:empty {
        display: block;
        min-height: 1.5em;
        margin-bottom: 0.5em;
    }
}

main {
    margin-bottom: calc(2rem + 1vh);
}

%rm-dropdown-triangle {
    button::after {
        content: none;
    }
}

.dropdown {
    &:has(.dropdown-menu) {
        @extend %rm-dropdown-triangle;
    }
}

.icon {
    width: calc(0.5rem + 1.5vw);
    height: auto;
    aspect-ratio: 1/1;
}

header {
    nav {
        .icon {
            width: calc(0.5rem + 1vw);
            height: auto;
            aspect-ratio: 1/1;
        }
    }

}

.modal {

    &:has(.modal-dialog),
    &>* {
        scrollbar-gutter: stable both-edges;
    }

}

.lg-illustration {
    width: clamp(150px, 6rem + 10vw + 12vh, 750px);
    height: auto;
}

mark {
    -webkit-animation: 0.5s highlight 0.05s 1 normal forwards, 0.5s borderHighlight 0.05s 1 normal forwards;
    animation: 0.5s highlight 0.05s 1 normal forwards, 0.5s borderHighlight 0.05s 1 normal forwards;

    border-radius: 0.8em 0.3em;
    border: 1px solid transparent;

    margin-left: calc((0.125rem + 0.01vw)* -0.1);
    padding-left: calc(0.125rem + 0.01vw);

    background-color: none;
    background: linear-gradient(90deg, var(--bs-highlight-bg) 50%, rgba(255, 255, 255, 0) 50%);
    background-size: 200% 100%;
    background-position: 100% 0;
}

@-webkit-keyframes highlight {
    to {
        background-position: 0 0;
    }
}

@keyframes highlight {
    to {
        background-position: 0 0;
    }
}

@-webkit-keyframes borderHighlight {
    to {
        border-color: color-mix(in srgb, var(--bs-highlight-bg) 50%, orange 50%);
    }
}

@keyframes borderHighlight {
    to {
        border-color: color-mix(in srgb, var(--bs-highlight-bg) 50%, orange 50%);
    }
}

select {

    option,
    [id="select-options"] {
        background-color: var(--bs-body-tertiary);
        font-size: 1.12em;
        color: var(--bs-primary);
        font-weight: 900;

        &:not(:checked) {
            font-weight: bolder;
            color: var(--bs-body-secondary);
            font-size: 1em;
        }

        &:disabled {
            color: gray;
        }
    }

}

.no-transition {
    transition: none !important;
}

div:has(iframe, .btn-full-screen) {
    .btn-full-screen {
        position: absolute;
        top: calc(1.75em + 2.25vw);
        right: calc(1.75em + 2.25vw);

        &:hover {
            background-color: var(--bs-secondary-bg);
        }
    }
}

iframe body {
    background-color: red;
}

// adds placeholder on phone
input[type="date"],
input[type="time"],
input[type="datetime-local"] {
    &:not(:focus):invalid:before {
        position: absolute;
        color: color-mix(in srgb, var(--bs-body-color) 60%, transparent 40%) !important;

        @media screen and (max-width: 576px) {
            color: inherit;
            content: attr(placeholder);
        }
    }
}

input {
    &:focus-visible {

        &::placeholder {
            font-weight: normal;
        }
    }
}

input[type="tel"] {
    letter-spacing: 0.25em;

    // negate the letter-spacing on placeholder
    &::placeholder {
        letter-spacing: normal;
    }
}

select:invalid {
    color: color-mix(in srgb, var(--bs-body-color) 60%, transparent 40%);
}

.btn-full-screen:hover:not(:active) {
    svg {
        --hover-color: var(--bs-body-color);

        // https://stackoverflow.com/questions/18330344/how-to-add-border-outline-stroke-to-svg-elements-in-css#:~:text=%23example_1%20%7B%0A%20%20filter%3A%20%0A%20%20%20%20drop%2Dshadow(%2D1px%20%2D1px%200px%20%233e68ff)%20%0A%20%20%20%20drop%2Dshadow(2px%20%2D1px%200px%20%233e68ff)%20%0A%20%20%20%20drop%2Dshadow(2px%202px%200px%20%233e68ff)%0A%20%20%20%20drop%2Dshadow(%2D1px%202px%200px%20%233e68ff)%0A%7D
        filter:
            drop-shadow(-1px -1px 0px var(--hover-color)) drop-shadow(2px -1px 0px var(--hover-color)) drop-shadow(2px 2px 0px var(--hover-color)) drop-shadow(-1px 2px 0px var(--hover-color))
    }
}